<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>4.taro上传阿里OSS图片</title>
    <link href="/2023/12/01/Taro/Dev/4.taro%E4%B8%8A%E4%BC%A0%E9%98%BF%E9%87%8COSS%E5%9B%BE%E7%89%87/"/>
    <url>/2023/12/01/Taro/Dev/4.taro%E4%B8%8A%E4%BC%A0%E9%98%BF%E9%87%8COSS%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.freesion.com/article/86921005562/">TARO框架中引入阿里云</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>5.Taro -刷新问题.md</title>
    <link href="/2023/12/01/Taro/Dev/5.taro%E5%88%B7%E6%96%B0%E9%97%AE%E9%A2%98/"/>
    <url>/2023/12/01/Taro/Dev/5.taro%E5%88%B7%E6%96%B0%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h1><p><a href="https://www.jianshu.com/p/27bdf0fb0773">修改完成后跳转回上一个页面刷新</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>6.taro瀑布流</title>
    <link href="/2023/12/01/Taro/Dev/6.taro%E7%80%91%E5%B8%83%E6%B5%81/"/>
    <url>/2023/12/01/Taro/Dev/6.taro%E7%80%91%E5%B8%83%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">componentWillMount</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Taro</span>.<span class="hljs-title function_">getSystemInfo</span>(&#123;<br>        <span class="hljs-attr">success</span>: (<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">let</span> ww = res.<span class="hljs-property">windowWidth</span>;<br>            <span class="hljs-keyword">let</span> wh = res.<span class="hljs-property">windowHeight</span>;<br>            <span class="hljs-keyword">let</span> imgWidth = ww * <span class="hljs-number">0.5</span>;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setState</span>(&#123;<br>                imgWidth<br>            &#125;)<br>        &#125;)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2.Taro 升级3.6.2 报 _getEnv is not defined</title>
    <link href="/2023/01/02/Taro/Docs/2.Taro%20%E5%8D%87%E7%BA%A7%E6%8A%A5%E9%94%99%E8%AF%AF/"/>
    <url>/2023/01/02/Taro/Docs/2.Taro%20%E5%8D%87%E7%BA%A7%E6%8A%A5%E9%94%99%E8%AF%AF/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/f6c8d070bf4f">2.Taro 升级3.6.2 报 _getEnv is not defined</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Docs</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>0.taro版本1.x升级3.x</title>
    <link href="/2023/01/01/Taro/Docs/0.taro%E7%89%88%E6%9C%AC1.x%E5%8D%87%E7%BA%A73.x/"/>
    <url>/2023/01/01/Taro/Docs/0.taro%E7%89%88%E6%9C%AC1.x%E5%8D%87%E7%BA%A73.x/</url>
    
    <content type="html"><![CDATA[<p><a href="https://nervjs.github.io/taro-docs/docs/migration/">3.0 升级官网</a></p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install -g @tarojs/cli@latest 安装最新版<br>taro update self<br><span class="hljs-built_in">npm</span> i -g @tarojs/cli<br><span class="hljs-built_in">npm</span> uninstall -g @tarojs/cli<br></code></pre></td></tr></table></figure><p>npm install –save-dev @tarojs&#x2F;<a href="mailto:&#x63;&#x6c;&#105;&#x40;&#51;&#46;&#x78;">&#x63;&#x6c;&#105;&#x40;&#51;&#46;&#x78;</a></p><p>taro –version</p><p>cd &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules<br>rm -rf @tarojs&#x2F;<br>安装指定版本<br>npm install -g @tarojs&#x2F;<a href="mailto:&#99;&#x6c;&#x69;&#64;&#49;&#x2e;&#51;&#x2e;&#50;&#x31;">&#99;&#x6c;&#x69;&#64;&#49;&#x2e;&#51;&#x2e;&#50;&#x31;</a></p><p>安装最新版<br>npm install -g @tarojs&#x2F;cli@lates</p><p>更新项目中 Taro 相关的依赖<br>taro update project</p><p>package-lock.json 在 package.json 同级，删除即可</p><p>卸载 tarojs<br>npm uninstall -g @tarojs&#x2F;cli1.3.42<br>安装指定版本，比如你当前的版本为 1.3.42：<br>npm install -g @tarojs&#x2F;<a href="mailto:&#99;&#x6c;&#x69;&#x40;&#x31;&#46;&#51;&#x2e;&#52;&#50;">&#99;&#x6c;&#x69;&#x40;&#x31;&#46;&#51;&#x2e;&#52;&#50;</a><br>npm install -g @tarojs&#x2F;<a href="mailto:&#99;&#108;&#105;&#64;&#51;&#46;&#54;&#x2e;&#x32;">&#99;&#108;&#105;&#64;&#51;&#46;&#54;&#x2e;&#x32;</a></p><p>taro update self 相当于执行了 yarn global add @tarojs&#x2F;cli@${最新的稳定版本}</p><p><a href="https://www.npmjs.com/search?q=tarojs/taro-alipay">查询依赖版本</a></p><p><a href="https://www.w3cschool.cn/taro_v3/taro-advanceAndOptimization.html">https://www.w3cschool.cn/taro_v3/taro-advanceAndOptimization.html</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Docs</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Taro/微信小程序 解决小程序版本强制更新</title>
    <link href="/2023/01/01/Taro/Docs/1.Taro:%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%20%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%89%88%E6%9C%AC%E5%BC%BA%E5%88%B6%E6%9B%B4%E6%96%B0/"/>
    <url>/2023/01/01/Taro/Docs/1.Taro:%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%20%E8%A7%A3%E5%86%B3%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%89%88%E6%9C%AC%E5%BC%BA%E5%88%B6%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/2e8659bb6e6e">https://www.jianshu.com/p/2e8659bb6e6e</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Docs</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CSS</title>
    <link href="/2022/12/04/HTML/css/"/>
    <url>/2022/12/04/HTML/css/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.runoob.com/cssref/css3-pr-justify-content.html">CSS资料</a></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>CSS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Taro - console.log 打印问题.md</title>
    <link href="/2022/12/01/Taro/Dev/1.taro%E6%89%93%E5%8D%B0%E9%97%AE%E9%A2%98/"/>
    <url>/2022/12/01/Taro/Dev/1.taro%E6%89%93%E5%8D%B0%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_36579455/article/details/109442187">https://blog.csdn.net/qq_36579455/article/details/109442187</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2.taro多行隐藏</title>
    <link href="/2022/12/01/Taro/Dev/2.taro%E5%A4%9A%E8%A1%8C%E9%9A%90%E8%97%8F/"/>
    <url>/2022/12/01/Taro/Dev/2.taro%E5%A4%9A%E8%A1%8C%E9%9A%90%E8%97%8F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">word-break</span>: break-all;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">text-overflow</span>: ellipsis;<br><span class="hljs-attribute">display</span>: -webkit-box;<br>-webkit-box-orient: vertical;<br>box-orient: vertical;<br><span class="hljs-comment">/* 必须保留，autoprefixer 会自动删除过时元素 */</span><br><span class="hljs-comment">/* autoprefixer: off */</span><br>-webkit-box-orient: vertical;<br>-webkit-line-clamp: <span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2.taro云函数问题</title>
    <link href="/2022/12/01/Taro/Dev/3.taro%E4%BA%91%E5%87%BD%E6%95%B0-Error/"/>
    <url>/2022/12/01/Taro/Dev/3.taro%E4%BA%91%E5%87%BD%E6%95%B0-Error/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/9647436be448">错误</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>3.taro云函数</title>
    <link href="/2022/12/01/Taro/Dev/3.taro%E4%BA%91%E5%87%BD%E6%95%B0/"/>
    <url>/2022/12/01/Taro/Dev/3.taro%E4%BA%91%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_43616817/article/details/119353512">配置</a></p><p>不是所有函数都支持</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/#%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF">https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/#用户信息</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Initialization-构造过程</title>
    <link href="/2022/11/04/Swift/Initialization-%E6%9E%84%E9%80%A0%E8%BF%87%E7%A8%8B/"/>
    <url>/2022/11/04/Swift/Initialization-%E6%9E%84%E9%80%A0%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p> <a href="https://swiftgg.gitbook.io/swift/swift-jiao-cheng/14_initialization">Initialization</a><br> <a href="https://juejin.cn/post/6844904128162824206">资料</a></p>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Initialization</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>mutating-关键字</title>
    <link href="/2022/11/04/Swift/Keywords-mutating/"/>
    <url>/2022/11/04/Swift/Keywords-mutating/</url>
    
    <content type="html"><![CDATA[<ul><li>使用 mutating 关键字修饰方法是为了修饰方法是为了能在该方法中修改<code>struct</code>或是<code>enum</code>的变量,</li><li>在设计接口的时候,也要考虑使用者程序的扩展性</li><li>所以要多考虑使用<code>mutating</code>来修饰方法</li></ul><blockquote><p>先定义一个 protocol</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">ExampleProtocol</span> &#123;<br>    <span class="hljs-keyword">var</span> simpleDescription: <span class="hljs-type">String</span> &#123; <span class="hljs-keyword">get</span> &#125;<br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">adjust</span>()<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><code>class</code>来遵守这个协议ExampleProtocol</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">class SimpleClass: ExampleProtocol &#123;<br>    <span class="hljs-selector-tag">var</span> simpleDescription: String = <span class="hljs-string">&quot;A very simple class&quot;</span><br>    <span class="hljs-selector-tag">var</span> anotherProperty: Int = <span class="hljs-number">110</span><br>    <span class="hljs-comment">//  在 class 中实现带有 mutating 方法的接口时,不用 mutating 进行修饰。因为对于 class 来说,类的成员变量和方法都是透明的, 所以不必使用 mutating 来进行修饰</span><br>  func <span class="hljs-built_in">adjust</span>() &#123;<br>    simpleDescription += <span class="hljs-string">&quot;Now 100% adjusted&quot;</span><br>  &#125;<br>&#125;<br><span class="hljs-comment">//  打印结果</span><br><span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">a</span> = <span class="hljs-built_in">SimpleClass</span>()<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.adjust</span>()<br>let aDescription = <span class="hljs-selector-tag">a</span>.simpleDescription<br></code></pre></td></tr></table></figure><blockquote><p> <code>struct</code> 实现协议 ExampleProtocol</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">SimpleStruct</span>: <span class="hljs-title class_">ExampleProtocol</span> &#123;<br>    <span class="hljs-keyword">var</span> simpleDescription: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;A simple structure&quot;</span><br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">adjust</span>() &#123;<br>        simpleDescription <span class="hljs-operator">+=</span> <span class="hljs-string">&quot;(adjusted)&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>enum 中实现协议 ExampleProtocol</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">SimpleEnum</span>: <span class="hljs-title class_">ExampleProtocol</span> &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-type">First</span>, <span class="hljs-type">Second</span>, <span class="hljs-type">Third</span><br>    <span class="hljs-keyword">var</span> simpleDescription: <span class="hljs-type">String</span> &#123;<br>        <span class="hljs-keyword">get</span> &#123;<br>            <span class="hljs-keyword">switch</span> <span class="hljs-keyword">self</span> &#123;<br>            <span class="hljs-keyword">case</span> .<span class="hljs-type">First</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;first&quot;</span><br>            <span class="hljs-keyword">case</span> .<span class="hljs-type">Second</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;second&quot;</span><br>            <span class="hljs-keyword">case</span> .<span class="hljs-type">Third</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;third&quot;</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">set</span> &#123;<br>            simpleDescription <span class="hljs-operator">=</span> newValue<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">adjust</span>() &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h1><ul><li>如果将 ExampleProtocol 中修饰方法的 mutating 去掉,编译器会报错说没有实现protocol</li><li>如果将 struct 中的 mutating 去掉,则报错不能更改结构体的成员</li></ul>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Keywords</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Subscripts-下标访问</title>
    <link href="/2022/11/04/Swift/Subscripts-%E4%B8%8B%E6%A0%87%E8%AE%BF%E9%97%AE/"/>
    <url>/2022/11/04/Swift/Subscripts-%E4%B8%8B%E6%A0%87%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="类型关联"><a href="#类型关联" class="headerlink" title="类型关联"></a>类型关联</h1><blockquote><p>subscripts(下标)是访问对象数据中的快捷方式，<br>所谓下标脚本语法就是能够通过，实例[索引值]来访问实例中的数据<br>类似于我们访问数组和字典，其实Swift中的数组和字典是一个结构体</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">Array</span>:<span class="hljs-keyword">public</span> <span class="hljs-keyword">subscript</span>(<span class="hljs-params">index</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Element</span><br>arr[<span class="hljs-number">0</span>] <span class="hljs-operator">==</span> arr.subscript(<span class="hljs-number">0</span>)<br><span class="hljs-type">Dictionary</span>:<span class="hljs-keyword">public</span> <span class="hljs-keyword">subscript</span>(<span class="hljs-params">key</span>: <span class="hljs-type">Key</span>) -&gt; <span class="hljs-type">Value</span>?<br>dict[<span class="hljs-string">&quot;key&quot;</span>] <span class="hljs-operator">==</span> dict.subscript(<span class="hljs-string">&quot;key&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span> &#123;<br>    <span class="hljs-keyword">var</span> name:<span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;xiaoming&quot;</span><br>    <span class="hljs-keyword">var</span> math:<span class="hljs-type">Double</span> <span class="hljs-operator">=</span> <span class="hljs-number">99.0</span><br>    <span class="hljs-keyword">var</span> chinese:<span class="hljs-type">Double</span> <span class="hljs-operator">=</span> <span class="hljs-number">99.0</span><br>    <span class="hljs-keyword">var</span> english:<span class="hljs-type">Double</span> <span class="hljs-operator">=</span> <span class="hljs-number">99.0</span><br>    <br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">score</span>(<span class="hljs-params">course</span>:<span class="hljs-type">String</span>) -&gt;<span class="hljs-type">Double</span>?<br>    &#123;<br>        <span class="hljs-keyword">switch</span> course&#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;math&quot;</span>:<br>            <span class="hljs-keyword">return</span> math<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;chinese&quot;</span>:<br>            <span class="hljs-keyword">return</span> chinese<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;english&quot;</span>:<br>            <span class="hljs-keyword">return</span> english<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>        &#125;<br>    &#125;<br>    <br>    <br>    <span class="hljs-comment">//要想实现下标访问, 必须实现subscript方法</span><br>    <span class="hljs-keyword">subscript</span>(<span class="hljs-params">course</span>:<span class="hljs-type">String</span>) -&gt;<span class="hljs-type">Double</span>?&#123;<br>        <span class="hljs-comment">//如果想要通过下标访问, 必须实现get方法</span><br>        <span class="hljs-keyword">get</span>&#123;<br>            <span class="hljs-keyword">switch</span> course&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;math&quot;</span>:<br>                <span class="hljs-keyword">return</span> math<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;chinese&quot;</span>:<br>                <span class="hljs-keyword">return</span> chinese<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;english&quot;</span>:<br>                <span class="hljs-keyword">return</span> english<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>            &#125;<br>        &#125;<br>        <br>        <span class="hljs-comment">//如果想要通过下表赋值, 必须实现set方法</span><br>        <span class="hljs-keyword">set</span>&#123;<br>            <span class="hljs-keyword">switch</span> course&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;math&quot;</span>:<br>                math <span class="hljs-operator">=</span> newValue<span class="hljs-operator">!//</span> 因为返回的是可选类型,所以使用了强制解包<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;chinese&quot;</span>:<br>                chinese <span class="hljs-operator">=</span> newValue<span class="hljs-operator">!</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;english&quot;</span>:<br>                english <span class="hljs-operator">=</span> newValue<span class="hljs-operator">!</span><br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;not found&quot;</span>)<br>            &#125;<br>            <br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> stu <span class="hljs-operator">=</span> <span class="hljs-type">Student</span>(name: <span class="hljs-string">&quot;zs&quot;</span>, math: <span class="hljs-number">99.0</span>, chinese: <span class="hljs-number">88.0</span>, english: <span class="hljs-number">10.0</span>)<br><span class="hljs-built_in">print</span>(stu.score(course: <span class="hljs-string">&quot;math&quot;</span>) <span class="hljs-operator">??</span> <span class="hljs-string">&quot;nil&quot;</span>)<br>stu[<span class="hljs-string">&quot;chinese&quot;</span>] <span class="hljs-operator">=</span> <span class="hljs-number">100.0</span><br><span class="hljs-built_in">print</span>(stu[<span class="hljs-string">&quot;chinese&quot;</span>]<span class="hljs-operator">!</span>)<br><br></code></pre></td></tr></table></figure><h1 id="Swift中允许多索引的下标的"><a href="#Swift中允许多索引的下标的" class="headerlink" title="Swift中允许多索引的下标的"></a>Swift中允许多索引的下标的</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Mul</span> &#123;<br>    <span class="hljs-keyword">subscript</span>(<span class="hljs-params">a</span>:<span class="hljs-type">Int</span>, <span class="hljs-params">b</span>:<span class="hljs-type">Int</span>,<span class="hljs-params">c</span>:<span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> a <span class="hljs-operator">*</span> b <span class="hljs-operator">*</span> c<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> m <span class="hljs-operator">=</span> <span class="hljs-type">Mul</span>()<br><span class="hljs-built_in">print</span>(m[<span class="hljs-number">3</span>, <span class="hljs-number">5</span>,<span class="hljs-number">10</span>]) <span class="hljs-comment">//150</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Subscripts</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>JDDemo</title>
    <link href="/2022/11/04/HTML/JDDemo/"/>
    <url>/2022/11/04/HTML/JDDemo/</url>
    
    <content type="html"><![CDATA[<p><a href="https://tsejx.github.io/css-guidebook/layout/centered/center-horizontally">CSS GuideBook</a></p><h2 id="icon图标"><a href="#icon图标" class="headerlink" title="icon图标"></a>icon图标</h2><p> icon图标 <a href="http://www.jd.com/favicon.ico">www.jd.com/favicon.ico</a><br><a href="https://www.bilibili.com/video/BV1TW411M7eh?p=3&vd_source=35d887e513452db700d753cd11b73d41">icon</a></p><h2 id="html引入-element-ui"><a href="#html引入-element-ui" class="headerlink" title="html引入 element-ui"></a>html引入 element-ui</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>测试页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- cdn引入ElementUI样式 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-row</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-button</span>&gt;</span>默认按钮<span class="hljs-tag">&lt;/<span class="hljs-name">el-button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="hljs-tag">&lt;/<span class="hljs-name">el-button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="hljs-tag">&lt;/<span class="hljs-name">el-button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="hljs-tag">&lt;/<span class="hljs-name">el-button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="hljs-tag">&lt;/<span class="hljs-name">el-button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="hljs-tag">&lt;/<span class="hljs-name">el-button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-row</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--cdn引入ElementUI组件必须先引入Vue--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-comment">&lt;!-- cdn引入ElementUI组件库 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/element-ui/lib/index.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123; <span class="hljs-comment">// 配置对象 options</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 配置选项(option)</span></span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#app&#x27;</span>,  <span class="hljs-comment">// element: 指定用vue来管理页面中的哪个标签区域</span></span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="http://events.jianshu.io/u/43abc5b5c82d">vue资料</a></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>JDDemo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>HTML-引入Vue3(2)</title>
    <link href="/2022/11/04/HTML/HTML-%E5%BC%95%E5%85%A5Vue3(2).js/"/>
    <url>/2022/11/04/HTML/HTML-%E5%BC%95%E5%85%A5Vue3(2).js/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/35d0e4b8e0cc">原文</a></p><h2 id="1-cjs（两个版本都是完整版，包含编译器）"><a href="#1-cjs（两个版本都是完整版，包含编译器）" class="headerlink" title="1. cjs（两个版本都是完整版，包含编译器）"></a>1. cjs（两个版本都是完整版，包含编译器）</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vue<span class="hljs-selector-class">.cjs</span><span class="hljs-selector-class">.js</span><br>vue<span class="hljs-selector-class">.cjs</span><span class="hljs-selector-class">.prod</span>.js（开发版，代码进行了压缩）<br></code></pre></td></tr></table></figure><h2 id="2-global（这四个版本都可以在浏览器中直接通过scripts标签导入，导入之后会增加一个全局的Vue对象）"><a href="#2-global（这四个版本都可以在浏览器中直接通过scripts标签导入，导入之后会增加一个全局的Vue对象）" class="headerlink" title="2. global（这四个版本都可以在浏览器中直接通过scripts标签导入，导入之后会增加一个全局的Vue对象）"></a>2. global（这四个版本都可以在浏览器中直接通过scripts标签导入，导入之后会增加一个全局的Vue对象）</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vue<span class="hljs-selector-class">.global</span>.js（完整版，包含编译器和运行时）<br>vue<span class="hljs-selector-class">.global</span><span class="hljs-selector-class">.prod</span>.js（完整版，包含编译器和运行时，这是开发版本，代码进行了压缩）<br>vue<span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.global</span><span class="hljs-selector-class">.js</span><br>vue<span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.global</span><span class="hljs-selector-class">.prod</span>.js<br></code></pre></td></tr></table></figure><h2 id="3-browser（四个版本都包含esm，浏览器的原生模块化方式，可以直接通过的方式来导入模块）"><a href="#3-browser（四个版本都包含esm，浏览器的原生模块化方式，可以直接通过的方式来导入模块）" class="headerlink" title="3. browser（四个版本都包含esm，浏览器的原生模块化方式，可以直接通过的方式来导入模块）"></a>3. browser（四个版本都包含esm，浏览器的原生模块化方式，可以直接通过<script type="module" />的方式来导入模块）</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vue<span class="hljs-selector-class">.esm-browser</span><span class="hljs-selector-class">.js</span><br>vue<span class="hljs-selector-class">.esm-browser</span><span class="hljs-selector-class">.prod</span><span class="hljs-selector-class">.js</span><br>vue<span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.esm-browser</span><span class="hljs-selector-class">.js</span><br>vue<span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.esm-browser</span><span class="hljs-selector-class">.prod</span><span class="hljs-selector-class">.js</span><br><br></code></pre></td></tr></table></figure><h2 id="4-bundler（这两个版本没有打包所有的代码，只会打包使用的代码，需要配合打包工具来使用，会让Vue体积更小）"><a href="#4-bundler（这两个版本没有打包所有的代码，只会打包使用的代码，需要配合打包工具来使用，会让Vue体积更小）" class="headerlink" title="4. bundler（这两个版本没有打包所有的代码，只会打包使用的代码，需要配合打包工具来使用，会让Vue体积更小）"></a>4. bundler（这两个版本没有打包所有的代码，只会打包使用的代码，需要配合打包工具来使用，会让Vue体积更小）</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vue<span class="hljs-selector-class">.esm-bundler</span><span class="hljs-selector-class">.js</span><br>bue<span class="hljs-selector-class">.runtime</span><span class="hljs-selector-class">.esm-bundler</span><span class="hljs-selector-class">.js</span> <br></code></pre></td></tr></table></figure><h2 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h2><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;css/index.css&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://lib.baomitu.com/vue/3.0.2/vue.global.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>单页面使用Vue<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">state</span> &#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> &#123; createApp, reactive, toRefs &#125; = <span class="hljs-title class_">Vue</span>;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> data = <span class="hljs-title function_">reactive</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">state</span>: <span class="hljs-number">12</span></span></span><br><span class="language-javascript"><span class="language-xml">  &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        ...<span class="hljs-title function_">toRefs</span>(data)</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">  app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>Base</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>T-泛型基础</title>
    <link href="/2022/11/04/Swift/Generics-%E6%B3%9B%E5%9E%8B%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/11/04/Swift/Generics-%E6%B3%9B%E5%9E%8B%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<blockquote><p>泛型主要用于解决代码的抽象能力 + 代码的复用性</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">func</span> <span class="hljs-title function_">add</span>&lt;<span class="hljs-type">T</span>: <span class="hljs-type">Numeric</span>&gt;(<span class="hljs-params">num1</span>: <span class="hljs-type">T</span>, <span class="hljs-params">num2</span>: <span class="hljs-type">T</span>) -&gt; <span class="hljs-type">T</span> &#123;<br>    <span class="hljs-keyword">return</span> num1 <span class="hljs-operator">+</span> num2<br>&#125;<br><br><span class="hljs-built_in">print</span>(add(num1: <span class="hljs-number">3.7</span>, num2: <span class="hljs-number">44.9</span>)) <span class="hljs-comment">// 48.6</span><br><span class="hljs-built_in">print</span>(add(num1: <span class="hljs-number">27</span>, num2: <span class="hljs-number">100</span>))  <span class="hljs-comment">// 127</span><br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//Swift 没有为 CGFloat 和 Float 定义 + 。为了解决这个问题，您可以为 CGFloat 和 Float 定义 +</span><br><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">Addable</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">+</span>(<span class="hljs-params">lhs</span>: <span class="hljs-keyword">Self</span>, <span class="hljs-params">rhs</span>: <span class="hljs-keyword">Self</span>) -&gt; <span class="hljs-keyword">Self</span><br>&#125;<br><br><span class="hljs-keyword">func</span> <span class="hljs-title function_">add</span>&lt;<span class="hljs-type">T</span>: <span class="hljs-type">Addable</span>&gt;(<span class="hljs-params">num1</span>: <span class="hljs-type">T</span>, <span class="hljs-keyword">_</span> <span class="hljs-params">num2</span>: <span class="hljs-type">T</span>) -&gt; <span class="hljs-type">T</span> &#123;<br>    <span class="hljs-keyword">return</span> num1 <span class="hljs-operator">+</span> num2<br>&#125;<br><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">Int</span>: <span class="hljs-title class_">Addable</span> &#123;&#125;<br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">Double</span>: <span class="hljs-title class_">Addable</span> &#123;&#125;<br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">Float</span>: <span class="hljs-title class_">Addable</span> &#123;&#125;<br><br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0.2</span>)<br></code></pre></td></tr></table></figure><h2 id="类型约束"><a href="#类型约束" class="headerlink" title="类型约束"></a>类型约束</h2><h3 id="类型约束的语法"><a href="#类型约束的语法" class="headerlink" title="类型约束的语法"></a>类型约束的语法</h3><blockquote><p>语法：参数类型定义时，参数名称后放置单独的类或协议约束，约束与 参数名称之间使用冒号:隔开。 注意：类型的约束条件只能为<code>类</code>或<code>协议</code></p></blockquote><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-title">func someFunction&lt;T: SomeClass, U: SomeProtocol&gt;(someT: T, someU:</span> U) &#123;<br>    // `T`约束为继承自`SomeClass`的类型 `U`约束为遵守`SomeProtocol` 协议的类型<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="类型约束的使用"><a href="#类型约束的使用" class="headerlink" title="类型约束的使用"></a>类型约束的使用</h3><blockquote><p>因为&#x3D;&#x3D;操作符在Swift中不是所有类型都支持。比如，我们自定义的类型，只有只有实现了Swift标准库定义的Equatable协议，才能运用&#x3D;&#x3D;或!&#x3D;来比较该类型的任意的两个值</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">func</span> <span class="hljs-title function_">findIndex</span>&lt;<span class="hljs-type">T</span> : <span class="hljs-type">Equatable</span>&gt;(<span class="hljs-params">of</span> <span class="hljs-params">valueToFind</span>: <span class="hljs-type">T</span>, <span class="hljs-params">in</span> <span class="hljs-params">array</span>:[<span class="hljs-type">T</span>]) -&gt; <span class="hljs-type">Int</span>? &#123;<br>    <span class="hljs-keyword">for</span> (index, value) <span class="hljs-keyword">in</span> array.enumerated() &#123;<br>        <span class="hljs-keyword">if</span> value <span class="hljs-operator">==</span> valueToFind &#123;<br>            <span class="hljs-keyword">return</span> index<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Generics</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>T-泛型-类型关联</title>
    <link href="/2022/11/04/Swift/Generics-%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E5%85%B3%E8%81%94/"/>
    <url>/2022/11/04/Swift/Generics-%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E5%85%B3%E8%81%94/</url>
    
    <content type="html"><![CDATA[<h1 id="类型关联"><a href="#类型关联" class="headerlink" title="类型关联"></a>类型关联</h1><blockquote><p>当我们定义协议时，有时声明一个或多个关联类型作为协议定义的一部分是很有用的<br>关联类型的作用，主要提供某个类型的占位名称，然后作为协议的一部分去使用<br>关联类型的实际使用<code>类型直到协议被实现时才会指定</code><br>关联类型使用关键字<code>associatedtype</code>指定。</p></blockquote><h2 id="类型关联的使用"><a href="#类型关联的使用" class="headerlink" title="类型关联的使用"></a>类型关联的使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//定义协议使用类型关联</span><br><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">Container</span> &#123;<br>    <span class="hljs-keyword">associatedtype</span> <span class="hljs-type">Item</span><br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">append</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">item</span> : <span class="hljs-type">Item</span>)<br>    <span class="hljs-keyword">var</span> count : <span class="hljs-type">Int</span>&#123;<span class="hljs-keyword">get</span>&#125;<br>    <span class="hljs-keyword">subscript</span>(<span class="hljs-params">i</span>:<span class="hljs-type">Int</span>)-&gt;<span class="hljs-type">Item</span>&#123;<span class="hljs-keyword">get</span>&#125; <span class="hljs-comment">//下标访问</span><br>    <br>&#125;<br><span class="hljs-comment">//定义整型Stack类型</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">IntStack</span> : <span class="hljs-title class_">Container</span> &#123;<br>    <span class="hljs-keyword">var</span> items <span class="hljs-operator">=</span> [<span class="hljs-type">Int</span>]()<br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">push</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">item</span>:<span class="hljs-type">Int</span>)&#123;<br>        items.append(item)<br>    &#125;<br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">pop</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">item</span>:<span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        <span class="hljs-keyword">return</span> items.removeLast()<br>    &#125;<br>    <span class="hljs-comment">//实现协议时，需要明确关联类型的实际类型</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">Item</span> <span class="hljs-operator">=</span> <span class="hljs-type">Int</span> <span class="hljs-comment">//!&lt; ①</span><br><br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">append</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">item</span>: <span class="hljs-type">Item</span>) &#123;<span class="hljs-comment">//!&lt; ①若不存在，此处可直接 Int</span><br>        push(item)<br>    &#125;<br>    <br>    <span class="hljs-keyword">var</span> count: <span class="hljs-type">Int</span> &#123;<br>        items.count<br>    &#125;<br>    <span class="hljs-keyword">subscript</span>(<span class="hljs-params">i</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Int</span> &#123;<br>        items[i]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>Typealias Item &#x3D; Int是针对Container协议的实现，将Item的抽象类型转换为Int的具体类型</li><li>基于Swift的类型推断，通过append（_ :)方法便可以推断出Item的类型以及下标返回值的类型。</li><li>采用关联类型作为协议定义的一部分时，此协议也可以被泛型类型实现。</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Stack</span>&lt;<span class="hljs-title class_">Element</span>&gt; : <span class="hljs-title class_">Container</span> &#123;<br>    <span class="hljs-keyword">var</span> items <span class="hljs-operator">=</span> [<span class="hljs-type">Element</span>]()<br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">push</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">item</span>:<span class="hljs-type">Element</span>)&#123;<br>        items.append(item)<br>    &#125;<br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">pop</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">item</span>:<span class="hljs-type">Element</span>) -&gt; <span class="hljs-type">Element</span> &#123;<br>        <span class="hljs-keyword">return</span> items.removeLast()<br>    &#125;<br>    <span class="hljs-comment">//实现协议</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">Item</span> <span class="hljs-operator">=</span> <span class="hljs-type">Element</span><br>    <span class="hljs-comment">//自动提示为`Element`</span><br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">append</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">item</span>: <span class="hljs-type">Element</span>) &#123;<br>        push(item)<br>    &#125;<br>    <span class="hljs-keyword">var</span> count: <span class="hljs-type">Int</span> &#123;<br>        items.count<br>    &#125;<br>    <span class="hljs-keyword">subscript</span>(<span class="hljs-params">i</span>: <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Element</span> &#123;<br>        items[i]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="扩展现有类型以指定关联类型"><a href="#扩展现有类型以指定关联类型" class="headerlink" title="扩展现有类型以指定关联类型"></a>扩展现有类型以指定关联类型</h2><blockquote><p>前面协议中我们知道，当特定类型已经实现了协议的要求，但尚未声明该类型遵守协议。<br>可以通过扩展声明该类型遵守此协议<br>当协议中定义了关联类型同样也是可以的</p></blockquote><p>比如：Swift的Array类型已经提供了Container协议中方法，属性要求的实现，完全匹配Container协议要求。这意味着我们通过Array的扩展声明Array遵守Container协议，并且Array内部对于协议要求的实现可以推断出协议关联类型Item的实际类型。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">extension</span> <span class="hljs-title class_">Array</span> : <span class="hljs-title class_">Container</span>&#123;&#125;<br><span class="hljs-comment">//扩展现有类型以指定关联类型？是否成功。</span><br><span class="hljs-keyword">extension</span> <span class="hljs-title class_">Array</span> : <span class="hljs-title class_">Container</span>&#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">associateTypeOne</span>(<span class="hljs-keyword">_</span>:<span class="hljs-type">Item</span>)&#123;&#125;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">associateTypeTwo</span>(<span class="hljs-keyword">_</span>:<span class="hljs-type">Element</span>)&#123;&#125;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">associateTypeThree</span>(<span class="hljs-keyword">_</span> : <span class="hljs-keyword">Self</span>)&#123;&#125;<span class="hljs-comment">//实现协议时，Self都会与协议实现类型进行关联</span><br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://swiftgg.gitbook.io/swift/swift-jiao-cheng/22_generics">SwiftGG</a><br><a href="https://juejin.cn/post/6844904201839984648">掘金资料</a></p>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Generics</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>HTML中引用Vue</title>
    <link href="/2022/11/04/HTML/HTML-%E5%BC%95%E5%85%A5Vue.js/"/>
    <url>/2022/11/04/HTML/HTML-%E5%BC%95%E5%85%A5Vue.js/</url>
    
    <content type="html"><![CDATA[<p><a href="https://juejin.cn/post/7112975842514305038">VUE3+element-plus</a><br><a href="https://www.jianshu.com/p/35d0e4b8e0cc">这个也好用</a><br><a href="https://blog.51cto.com/u_15119353/5059142">2.0引用</a></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>Vue</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo</title>
    <link href="/2022/11/03/Hexo/Hexo/"/>
    <url>/2022/11/03/Hexo/Hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs swift">hexo n <span class="hljs-string">&quot;博客名称&quot;</span>  <span class="hljs-operator">=&gt;</span> hexo new <span class="hljs-string">&quot;博客名称&quot;</span>   #这两个都是创建新文章，前者是简写模式<br>hexo p  <span class="hljs-operator">=&gt;</span> hexo publish<br>hexo g  <span class="hljs-operator">=&gt;</span> hexo generate  #生成<br>hexo s  <span class="hljs-operator">=&gt;</span> hexo server  #启动服务预览<br>hexo d  <span class="hljs-operator">=&gt;</span> hexo deploy  #部署<br><br>hexo server   #<span class="hljs-type">Hexo</span> 会监视文件变动并自动更新，无须重启服务器<span class="hljs-operator">。</span><br>hexo server <span class="hljs-operator">-</span>s   #静态模式<br>hexo server <span class="hljs-operator">-</span>p <span class="hljs-number">5000</span>   #更改端口<br>hexo server <span class="hljs-operator">-</span>i <span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span>   #自定义<span class="hljs-type">IP</span><br>hexo clean   #清除缓存，网页正常情况下可以忽略此条命令<br>hexo g   #生成静态网页<br>hexo d   #开始部署<br></code></pre></td></tr></table></figure><p>title: YoYo #网站标题<br>subtitle: ‘Happy learning swift’<br>description: ‘’<br>keywords:<br>author: YoYo<br>language: zh-CN #en<br>timezone: ‘Asia&#x2F;Shanghai#网站时区’ #网站时区</p><p>deploy:<br>type: ‘git’<br>repo: <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;">&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;</a>:YoSwiftDemo&#x2F;YoSwiftDemo.github.io.git<br>branch: main</p><p><a href="https://segmentfault.com/a/1190000038373795">https://segmentfault.com/a/1190000038373795</a></p><p>图床<br><a href="https://www.imgurl.org/vip/manage/upload">https://www.imgurl.org/vip/manage/upload</a></p><h1 id="node-版本"><a href="#node-版本" class="headerlink" title=".node 版本"></a>.node 版本</h1><p>node 降级 npm 安装指定版本 macos<br>全局安装 n 模块</p><p>sudo npm install n -g</p><blockquote><p>安装当前稳定版本</p></blockquote><p>sudo n stable</p><blockquote><p>安装最新版本</p></blockquote><p>sudo n latest</p><blockquote><p>node 版本降级&#x2F;升级（安装指定 node 版本）</p></blockquote><p>sudo n 版本号<br>sudo n v14.18.2</p><blockquote><p>卸载指定 node 版本</p></blockquote><p>sudo n rm 版本号</p><blockquote><p>检测目前安装了哪些 node 版本</p></blockquote><p>n</p><blockquote><p>切换 node 版本（不会删除已安装的其他版本）</p></blockquote><p>n 版本号</p><blockquote><p>查看 node 版本号</p></blockquote><p>node -v</p><blockquote><p>查按所有 npm 版本<br>npm view npm versions<br>安装指定版本 npm<br>sudo npm install <a href="mailto:&#x6e;&#x70;&#x6d;&#64;&#x36;&#x2e;&#49;&#x34;&#x2e;&#x31;&#55;">&#x6e;&#x70;&#x6d;&#64;&#x36;&#x2e;&#49;&#x34;&#x2e;&#x31;&#55;</a> -g</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>UWOOZ-Api-Mall-adress</title>
    <link href="/2022/11/03/Taro/Api/UWOOZ/0.Mall-adress/"/>
    <url>/2022/11/03/Taro/Api/UWOOZ/0.Mall-adress/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="71175e7856ca931076c1a4bc82c111228d2bb73704bf32d2b7f0bfb658b8ffb4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这里需要密码才能访问。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Api</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>IteratorProtocol</title>
    <link href="/2022/11/02/Swift/Protocol-IteratorProtocol/"/>
    <url>/2022/11/02/Swift/Protocol-IteratorProtocol/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/3b0d0d3579a7">IteratorProtocol</a></p><h1 id="IteratorProtocol协议和Sequence"><a href="#IteratorProtocol协议和Sequence" class="headerlink" title="IteratorProtocol协议和Sequence"></a>IteratorProtocol协议和Sequence</h1><ul><li>IteratorProtocol协议和Sequence的联系是非常紧密的。</li><li>序列通过创建一个迭代器来访问它们的元素，迭代器跟踪它的迭代过程并在它通过序列前进时每次返回一个元素。</li></ul><blockquote><p>当你在array, set, 或者其他集合和序列使用for - in的时候就会用到这个类型的迭代器<br>swift使用<code>队列</code>或者<code>集合的内部迭代器</code>以便使用for - in这种语言结构<br>直接使用迭代器遍历元素和用for - in遍历同一个数组是等价的。比如你使用for - in遍历数组[“Antelope”, “Butterfly”, “Camel”, “Dolphin”]</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Swift"><span class="hljs-keyword">let</span> animals <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;Antelope&quot;</span>, <span class="hljs-string">&quot;Butterfly&quot;</span>, <span class="hljs-string">&quot;Camel&quot;</span>, <span class="hljs-string">&quot;Dolphin&quot;</span>]<br><span class="hljs-keyword">for</span> animal <span class="hljs-keyword">in</span> animals &#123;<br>   <span class="hljs-built_in">print</span>(animal)<br>&#125;<br><span class="hljs-comment">// Prints &quot;Antelope&quot;</span><br><span class="hljs-comment">// Prints &quot;Butterfly&quot;</span><br><span class="hljs-comment">// Prints &quot;Camel&quot;</span><br><span class="hljs-comment">// Prints &quot;Dolphin&quot;</span><br></code></pre></td></tr></table></figure><ul><li>但是在他的底层使用的是Array的迭代器遍历这个数组</li><li>animals.makeIterator()返回当前数组的迭代器，下一步当while循环调用了迭代器的next()方法时，元素就被一个一个取出来了，直到next()返回nil的时候退出</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">var animalIterator = animals.makeIterator()<br>    <span class="hljs-keyword">while</span> let animal = animalIterator.<span class="hljs-keyword">next</span>() &#123;<br>        print(animal)<br>    &#125;<br>    <span class="hljs-regexp">//</span> Prints <span class="hljs-string">&quot;Antelope&quot;</span><br>    <span class="hljs-regexp">//</span> Prints <span class="hljs-string">&quot;Butterfly&quot;</span><br>    <span class="hljs-regexp">//</span> Prints <span class="hljs-string">&quot;Camel&quot;</span><br>    <span class="hljs-regexp">//</span> Prints <span class="hljs-string">&quot;Dolphin&quot;</span><br></code></pre></td></tr></table></figure><h1 id="直接使用迭代器"><a href="#直接使用迭代器" class="headerlink" title="直接使用迭代器"></a>直接使用迭代器</h1><ul><li>在通常的情况下我们直接使用for-in就可以满足，但是在某些场合下我们会直接使用迭代器。</li><li>一个例子就是reduce1(<em>:)函数，类似于标准库中定义的reduce(</em>:<em>:)函数(带有一个初始值和一个结合闭包)，reduce1(</em>:)需要用到序列的第一个元素作为初始值。</li><li>下面就是reduce1(_:)的一个实现，直接使用迭代器来取初始值</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">extension</span> Sequence &#123;<br>         func reduce1(_ nextPartialResult: (<span class="hljs-built_in">Iterator</span>.<span class="hljs-built_in">Element</span>, <span class="hljs-built_in">Iterator</span>.<span class="hljs-built_in">Element</span>) -&gt; <span class="hljs-built_in">Iterator</span>.<span class="hljs-built_in">Element</span>) -&gt; <span class="hljs-built_in">Iterator</span>.<span class="hljs-built_in">Element?</span> &#123;<br>             <span class="hljs-keyword">var</span> i = makeIterator()<br>             guard <span class="hljs-keyword">var</span> accumulated = i.next() <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">return</span> nil<br>             &#125;<br>             <span class="hljs-keyword">while</span> let element = i.next() &#123;<br>                 accumulated = nextPartialResult(accumulated, element)<br>             &#125;<br>             <span class="hljs-keyword">return</span> accumulated<br>         &#125;<br>     &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Protocol</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Protocol协议基础</title>
    <link href="/2022/11/02/Swift/Protocol-%E5%8D%8F%E8%AE%AE%E8%BF%9B%E9%98%B6/"/>
    <url>/2022/11/02/Swift/Protocol-%E5%8D%8F%E8%AE%AE%E8%BF%9B%E9%98%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="协议进阶-将协议作为类型"><a href="#协议进阶-将协议作为类型" class="headerlink" title="协议进阶- 将协议作为类型"></a>协议进阶- 将协议作为类型</h1><ul><li><p>作为<code>函数</code>、<code>方法</code>或者初始化程序中的<code>参数类型</code>或者<code>返回值</code></p></li><li><p>作为<code>常量</code>、<code>变量</code>或<code>属性的类型</code></p></li><li><p>作为<code>数组</code>、<code>字典</code>或者其他容器中项目的类型</p></li></ul><h2 id="eg：通过继承基类实现"><a href="#eg：通过继承基类实现" class="headerlink" title="eg：通过继承基类实现"></a>eg：通过<code>继承基类</code>实现</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-keyword">var</span> area: <span class="hljs-type">Double</span>&#123;<br>        <span class="hljs-keyword">get</span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Circle</span>: <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-keyword">var</span> radius: <span class="hljs-type">Double</span><br>   <br>    <span class="hljs-keyword">init</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">radius</span>: <span class="hljs-type">Double</span>) &#123;<br>        <span class="hljs-keyword">self</span>.radius <span class="hljs-operator">=</span> radius<br>    &#125;<br>    <br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">var</span> area: <span class="hljs-type">Double</span>&#123;<br>        <span class="hljs-keyword">get</span>&#123;<br>            <span class="hljs-keyword">return</span> radius <span class="hljs-operator">*</span> radius <span class="hljs-operator">*</span> <span class="hljs-number">3.14</span><br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Rectangle</span>: <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-keyword">var</span> width, height: <span class="hljs-type">Double</span><br>    <span class="hljs-keyword">init</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">width</span>: <span class="hljs-type">Double</span>, <span class="hljs-keyword">_</span> <span class="hljs-params">height</span>: <span class="hljs-type">Double</span>) &#123;<br>        <span class="hljs-keyword">self</span>.width <span class="hljs-operator">=</span> width<br>        <span class="hljs-keyword">self</span>.height <span class="hljs-operator">=</span> height<br>    &#125;<br>    <br>    <span class="hljs-keyword">override</span> <span class="hljs-keyword">var</span> area: <span class="hljs-type">Double</span>&#123;<br>        <span class="hljs-keyword">get</span>&#123;<br>            <span class="hljs-keyword">return</span> width <span class="hljs-operator">*</span> height<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> circle: <span class="hljs-type">Shape</span> <span class="hljs-operator">=</span> <span class="hljs-type">Circle</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">10.0</span>)<br><span class="hljs-keyword">var</span> rectangle: <span class="hljs-type">Shape</span> <span class="hljs-operator">=</span> <span class="hljs-type">Rectangle</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">10.0</span>, <span class="hljs-number">20.0</span>)<br><br><span class="hljs-keyword">var</span> shapes: [<span class="hljs-type">Shape</span>] <span class="hljs-operator">=</span> [circle, rectangle]<br><span class="hljs-keyword">for</span> shape <span class="hljs-keyword">in</span> shapes&#123;<br>    <span class="hljs-built_in">print</span>(shape.area)<br>&#125;<br><br><span class="hljs-operator">&lt;!--</span>打印结果<span class="hljs-operator">--&gt;</span><br><span class="hljs-number">314.0</span><br><span class="hljs-number">200.0</span><br></code></pre></td></tr></table></figure><blockquote><p>对于数组来说，当前的大小是固定的，因为当前存放的都是引用类型（即占8字节），其存储结构如下所示 </p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2022/11/04/5ab76a02123d282b.png"></p><h2 id="通过协议实现"><a href="#通过协议实现" class="headerlink" title="通过协议实现"></a>通过协议实现</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//通过协议实现：area必须有一个默认实现</span><br><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">Shape</span> &#123;<br>    <span class="hljs-keyword">var</span> area: <span class="hljs-type">Double</span> &#123;<span class="hljs-keyword">get</span>&#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Circle</span>: <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-keyword">var</span> radius: <span class="hljs-type">Double</span><br><br>    <span class="hljs-keyword">init</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">radius</span>: <span class="hljs-type">Double</span>) &#123;<br>        <span class="hljs-keyword">self</span>.radius <span class="hljs-operator">=</span> radius<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> area: <span class="hljs-type">Double</span>&#123;<br>        <span class="hljs-keyword">get</span>&#123;<br>            <span class="hljs-keyword">return</span> radius <span class="hljs-operator">*</span> radius <span class="hljs-operator">*</span> <span class="hljs-number">3.14</span><br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Rectangle</span>: <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-keyword">var</span> width, height: <span class="hljs-type">Double</span><br>    <span class="hljs-keyword">init</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">width</span>: <span class="hljs-type">Double</span>, <span class="hljs-keyword">_</span> <span class="hljs-params">height</span>: <span class="hljs-type">Double</span>) &#123;<br>        <span class="hljs-keyword">self</span>.width <span class="hljs-operator">=</span> width<br>        <span class="hljs-keyword">self</span>.height <span class="hljs-operator">=</span> height<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> area: <span class="hljs-type">Double</span>&#123;<br>        <span class="hljs-keyword">get</span>&#123;<br>            <span class="hljs-keyword">return</span> width <span class="hljs-operator">*</span> height<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> circle: <span class="hljs-type">Shape</span> <span class="hljs-operator">=</span> <span class="hljs-type">Circle</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">10.0</span>)<br><span class="hljs-keyword">var</span> rectangle: <span class="hljs-type">Shape</span> <span class="hljs-operator">=</span> <span class="hljs-type">Rectangle</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">10.0</span>, <span class="hljs-number">20.0</span>)<br><br><span class="hljs-keyword">var</span> shapes: [<span class="hljs-type">Shape</span>] <span class="hljs-operator">=</span> [circle, rectangle]<br><span class="hljs-keyword">for</span> shape <span class="hljs-keyword">in</span> shapes&#123;<br>    <span class="hljs-built_in">print</span>(shape.area)<br>&#125;<br><br><span class="hljs-operator">&lt;!--</span>打印结果<span class="hljs-operator">--&gt;</span><br><span class="hljs-number">314.0</span><br><span class="hljs-number">200.0</span><br></code></pre></td></tr></table></figure><ul><li>当数组中的元素指定的Shape是类时，数组中存储的都是引用类型的地址，那么问题来了，如果数组指定的Shape是一个协议时，数组中存储的是什么？</li><li>协议的底层存储结构：24字节valueBuffer + vwt（8字节） + pwt（8字节</li></ul><p><a href="https://juejin.cn/post/7001872073253453838">资料</a></p>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Protocol</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Protocol-协议总结</title>
    <link href="/2022/11/02/Swift/Protocol-%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
    <url>/2022/11/02/Swift/Protocol-%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="class、struct、enum都可以遵守协议"><a href="#class、struct、enum都可以遵守协议" class="headerlink" title="class、struct、enum都可以遵守协议"></a>class、struct、enum都可以遵守协议</h1><blockquote><p>1、多个协议之间需要使用逗号分隔<br>2、如果class中有superClass，一般放在协议之前</p></blockquote><h2 id="协议中可以添加属性"><a href="#协议中可以添加属性" class="headerlink" title="协议中可以添加属性"></a>协议中可以添加属性</h2><blockquote><p>属性必须明确是 可读（get）&#x2F;可读可写（get + set）的<br>属性使用var修饰</p></blockquote><ul><li>协议中可以定义方法，只需要定义当前方法的名称+参数列表+返回值，<br>其具体实现可以通过协议的extension实现，或者在遵守协议时实现</li><li>协议中也可以定义初始化方法，当实现初始化器时，必须使用required关键字</li><li>如果协议只能被class实现，需要协议继承自AnyObject</li></ul><h1 id="协议也可以作为类型，3种场景："><a href="#协议也可以作为类型，3种场景：" class="headerlink" title="协议也可以作为类型，3种场景："></a>协议也可以作为类型，3种场景：</h1><blockquote><p>1、作为函数、方法或者初始化程序中的参数类型或者返回值</p></blockquote><blockquote><p>2、作为常量、变量或属性的类型</p></blockquote><blockquote><p>3、作为数组、字典或者其他容器中项目的类型</p></blockquote><h2 id="协议的底层存储结构"><a href="#协议的底层存储结构" class="headerlink" title="协议的底层存储结构"></a>协议的底层存储结构</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">协议的底层存储结构：24字节valueBuffer + vwt（8字节） + pwt（8字节）<br></code></pre></td></tr></table></figure><blockquote><p>1、前24个字节，官方称为Value Buffer，主要用于存储遵循了协议的class&#x2F;struct的属性值<br>2、如果超过Value Buffer最大容量</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">（<span class="hljs-number">1</span>）值类型 采用 <span class="hljs-keyword">copy</span>-<span class="hljs-built_in">write</span><br><br>（<span class="hljs-number">2</span>）引用类型 则是使用同一个堆区地址<br></code></pre></td></tr></table></figure><blockquote><p>3、后16个字节分别用于存储 vwt（值目录表）、pwt（协议目录表）</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Protocol</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Protocol协议基础</title>
    <link href="/2022/11/02/Swift/Protocol-%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/11/02/Swift/Protocol-%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><blockquote><p>协议的语法格式</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">MyProtocol</span> &#123; <br>    <span class="hljs-keyword">var</span> age: <span class="hljs-type">Int</span> &#123; <span class="hljs-keyword">get</span> <span class="hljs-keyword">set</span> &#125; <span class="hljs-comment">// 必须是var，不能是let</span><br>    <span class="hljs-keyword">var</span> name: <span class="hljs-type">String</span> &#123; <span class="hljs-keyword">get</span> &#125; <br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><code>class、struct、enum</code> 都可以遵守协议，如果需要遵守多个协议，可以使用逗号分隔</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">OneClass</span>: <span class="hljs-title class_">Protocol1</span>, <span class="hljs-title class_">Protocol2</span> &#123;<br> <br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>class中有<code>superClass</code>，一般是放在遵守的协议之前</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">OneClass</span>: <span class="hljs-title class_">Protocol1</span>, <span class="hljs-title class_">Protocol2</span> &#123;<br> <br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>：并不是说当前声明 get的属性一定是计算属性</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Swift"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Teacher</span>: <span class="hljs-title class_">MyProtocol</span> &#123;<br>    <span class="hljs-keyword">var</span> age: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">18</span> <br>    <span class="hljs-keyword">var</span> name: <span class="hljs-type">String</span>  <span class="hljs-comment">// 此时的name依旧是存储属性</span><br>    <span class="hljs-keyword">init</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">name</span>: <span class="hljs-type">String</span>) &#123; <br>        <span class="hljs-keyword">self</span>.name <span class="hljs-operator">=</span> name <br>    &#125; <br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>协议中的异变方法，表示在该方法可以改变其所属的实例，以及该实例的所有属性（用于枚 举和结构体），在为类实现该方法的时候不需要写 mutating关键字:</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Swift"><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">Togglable</span> &#123; <br>    <span class="hljs-keyword">mutating</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">toggle</span>() <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="协议中添加属性"><a href="#协议中添加属性" class="headerlink" title="协议中添加属性"></a>协议中添加属性</h2><ul><li>属性必须明确是<code>可读的</code>&#x2F;<code>可读可写的</code></li><li>变量属性 用<code>var</code>而不是<code>let</code></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift"> <span class="hljs-keyword">protocol</span> <span class="hljs-title class_">OneProtocol</span> &#123;<br>    <span class="hljs-keyword">var</span> age: <span class="hljs-type">Int</span> &#123;<span class="hljs-keyword">get</span> <span class="hljs-keyword">set</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="协议中定义方法"><a href="#协议中定义方法" class="headerlink" title="协议中定义方法"></a>协议中定义方法</h2><h3 id="在协议中定义方法-基础"><a href="#在协议中定义方法-基础" class="headerlink" title="在协议中定义方法-基础"></a>在协议中<code>定义方法</code>-基础</h3><ul><li>在协议中<code>定义方法</code>，只需要定义当前方法的<code>名称</code>、<code>参数列表</code>和<code>返回值</code></li><li>在具体的类中<code>遵守协议</code>，并实<code>现协议中的方法</code></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">OneProtocol</span> &#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">doSomething</span>()<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">teach</span>()<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Teacher</span>: <span class="hljs-title class_">OneProtocol</span>&#123;<br>    <span class="hljs-keyword">func</span> <span class="hljs-title function_">doSomething</span>() &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;func doSomething&quot;</span>)<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">teach</span>() &#123;<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;teach&quot;</span>)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> t <span class="hljs-operator">=</span> <span class="hljs-type">Teacher</span>()<br>t.doSomething()<br><span class="hljs-type">Teacher</span>.teach()<br></code></pre></td></tr></table></figure><h3 id="协议中-定义初始化方法"><a href="#协议中-定义初始化方法" class="headerlink" title="协议中-定义初始化方法"></a>协议中-定义初始化方法</h3><blockquote><p><code>类</code>在实现协议中的初始化器，必须使用<code>required</code>关键字修饰初始化器的实现（类的初始化器前添加 required 修饰符来表明所有该类的子类都必须实现该初始化器）</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">protocol</span> <span class="hljs-title class_">OneProtocol</span> &#123;<br>    <span class="hljs-keyword">init</span>(<span class="hljs-params">age</span>: <span class="hljs-type">Int</span>)<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Teacher</span>: <span class="hljs-title class_">OneProtocol</span>&#123;<br>    <span class="hljs-keyword">var</span> age: <span class="hljs-type">Int</span><br>    <span class="hljs-keyword">required</span> <span class="hljs-keyword">init</span>(<span class="hljs-params">age</span>: <span class="hljs-type">Int</span>) &#123;<br>        <span class="hljs-keyword">self</span>.age <span class="hljs-operator">=</span> age<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="类专用协议"><a href="#类专用协议" class="headerlink" title="类专用协议"></a>类专用协议</h3><ul><li>一个协议只能被类实现，需要协议继承自AnyObject</li><li>如果此时结构体遵守该协议，会报错</li><li>通过添加<code>AnyObject</code>关键字到协议的继承列表，可以限制协议只能被类的类型采纳</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">protocol MyProtocol: AnyObject&#123;&#125;<br></code></pre></td></tr></table></figure><h3 id="可选协议"><a href="#可选协议" class="headerlink" title="可选协议"></a>可选协议</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Swift"><span class="hljs-keyword">@objc</span> <span class="hljs-keyword">protocol</span> <span class="hljs-title class_">Incrementable</span> &#123; <br>    <span class="hljs-keyword">@objc</span> <span class="hljs-keyword">optional</span> <span class="hljs-keyword">func</span> <span class="hljs-title function_">increment</span>(<span class="hljs-params">by</span>: <span class="hljs-type">Int</span>) <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Protocol</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>UWOOZ-Api-Mall-Goods</title>
    <link href="/2022/11/02/Taro/Api/UWOOZ/0.Mall-goods/"/>
    <url>/2022/11/02/Taro/Api/UWOOZ/0.Mall-goods/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5102bbe90699e22892581a487e72adcf457a340b42e6d34c412a046a0f43fa93"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这里需要密码才能访问。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Api</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Statements-defer关键字</title>
    <link href="/2022/11/01/Swift/Statements-defer/"/>
    <url>/2022/11/01/Swift/Statements-defer/</url>
    
    <content type="html"><![CDATA[<p>执行推迟</p><p><a href="https://www.jianshu.com/p/05db53ab4141">资料</a></p>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Statements</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Statements-typealias</title>
    <link href="/2022/11/01/Swift/Statements-typealias/"/>
    <url>/2022/11/01/Swift/Statements-typealias/</url>
    
    <content type="html"><![CDATA[<p>执行推迟</p><p><a href="https://juejin.cn/post/6936072052038172702">资料</a></p>]]></content>
    
    
    <categories>
      
      <category>Grammar</category>
      
      <category>Keywords</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>0.taro兼容微信登录问题</title>
    <link href="/2022/11/01/Taro/Dev/0.taro%E5%85%BC%E5%AE%B9%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/"/>
    <url>/2022/11/01/Taro/Dev/0.taro%E5%85%BC%E5%AE%B9%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<blockquote><p>taro1.0支持旧版本 获取用户信息</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">if</span> (process.env.TARO_ENV === <span class="hljs-string">&#x27;weapp&#x27;</span>) &#123;<br>  <span class="hljs-keyword">const</span> &#123; code &#125; = <span class="hljs-keyword">await</span> Taro.login()<br>  <span class="hljs-keyword">const</span> &#123; encryptedData, iv, userInfo &#125; = <span class="hljs-keyword">await</span> Taro.getUserInfo(&#123;<br>    withCredentials: <span class="hljs-literal">true</span>,<br>    lang: <span class="hljs-string">&#x27;zh_CN&#x27;</span>,<br>  &#125;)<br></code></pre></td></tr></table></figure><p>最新<br><a href="https://www.likecs.com/show-308649000.html">wx.getUserProfile方法获取用户信息</a></p><p>  &#x2F;**</p><ul><li>点击 登录注册 回调函数。</li><li>@param {Object} e<br>   *&#x2F;<br>  handleGetUserInfo &#x3D; async e &#x3D;&gt; {</li></ul><p><a href="https://blog.csdn.net/xcdm100/article/details/116857728?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-116857728-blog-128036898.235%5Ev27%5Epc_relevant_3mothn_strategy_and_data_recovery&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-116857728-blog-128036898.235%5Ev27%5Epc_relevant_3mothn_strategy_and_data_recovery&amp;utm_relevant_index=11">https://blog.csdn.net/xcdm100/article/details/116857728?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-116857728-blog-128036898.235%5Ev27%5Epc_relevant_3mothn_strategy_and_data_recovery&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-116857728-blog-128036898.235%5Ev27%5Epc_relevant_3mothn_strategy_and_data_recovery&amp;utm_relevant_index=11</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue-Error</title>
    <link href="/2022/11/01/Taro/Demo/0.taro/"/>
    <url>/2022/11/01/Taro/Demo/0.taro/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_46025371/article/details/123424108">https://blog.csdn.net/weixin_46025371/article/details/123424108</a></p><p><a href="https://static2.cnodejs.org/topic/5eb4ae112d0afc4087f53c9a">https://static2.cnodejs.org/topic/5eb4ae112d0afc4087f53c9a</a></p><p>cloud.init({env: cloud.DYNAMIC_CURRENT_ENV})</p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Docs</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Taro-init</title>
    <link href="/2022/11/01/Taro/Demo/1.taro-init/"/>
    <url>/2022/11/01/Taro/Demo/1.taro-init/</url>
    
    <content type="html"><![CDATA[<p>#安装</p><h2 id="脚手架"><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h2><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">npm install -g <span class="hljs-title">@tarojs</span>/cli<br>或<br>yarn <span class="hljs-keyword">global</span> <span class="hljs-keyword">add</span> <span class="hljs-title">@tarojs</span>/cli<br></code></pre></td></tr></table></figure><h2 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">taro <span class="hljs-keyword">init</span> yourApp<br></code></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm run dev:h5<span class="hljs-regexp">/weapp/</span>alipay<span class="hljs-regexp">/swan/</span>rn<br>或<br>yarn dev:h5/...<br></code></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="h5端修改服务路径"><a href="#h5端修改服务路径" class="headerlink" title="h5端修改服务路径"></a>h5端修改服务路径</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">/config/index<span class="hljs-selector-class">.js</span><br><span class="hljs-selector-tag">h5</span>:&#123;<br>  devServer:&#123;port:<span class="hljs-number">4563</span>,host:<span class="hljs-string">&quot;localhost&quot;</span>&#125;,<br>    ....<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="多端调试"><a href="#多端调试" class="headerlink" title="多端调试"></a>多端调试</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/config/i</span>ndex.js<br>outputRoot: `dist/<span class="hljs-variable">$&#123;process.env.TARO_ENV&#125;</span>`<br><span class="hljs-regexp">//</span>编译生成的文件位于dist下，以各端环境命名h5<span class="hljs-regexp">/weapp/</span>...<br></code></pre></td></tr></table></figure><blockquote><p>对于微信小程序，还需要将project.config.json文件的miniprogramRoot 的路径值改为 dist&#x2F;weapp&#x2F;，这样就可以正常在开发者工具中看到小程序了</p></blockquote><h2 id="alias别名设置"><a href="#alias别名设置" class="headerlink" title="alias别名设置"></a>alias别名设置</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs stylus">config/index<span class="hljs-selector-class">.js</span><br>*如果报错：const path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br>const config = &#123;<br>    ………<br>     alias: &#123;<br>        <span class="hljs-string">&#x27;@/components&#x27;</span>: path<span class="hljs-selector-class">.resolve</span>(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;src/components&#x27;</span>),<br>        <span class="hljs-string">&#x27;@/utils&#x27;</span>: path<span class="hljs-selector-class">.resolve</span>(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;src/utils&#x27;</span>),<br>        <span class="hljs-string">&#x27;@/assets&#x27;</span>: path<span class="hljs-selector-class">.resolve</span>(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;src/assets&#x27;</span>),<br>      &#125;,<br>    ………<br> &#125;<br>根目录的jsconfig.json/tsconfig.json<span class="hljs-comment">//没有时自行创建</span><br>&#123;<br>  <span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>,<br>    <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;@/components/*&quot;</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;./src/components/*&quot;</span>]</span>,<br>      <span class="hljs-string">&quot;@/utils/*&quot;</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;./src/utils/*&quot;</span>]</span>,<br>      <span class="hljs-string">&quot;@/assets/*&quot;</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;./src/assets/*&quot;</span>]</span>,<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Demo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>2.Taro-Router-Events</title>
    <link href="/2022/11/01/Taro/Demo/2.taro-router-events/"/>
    <url>/2022/11/01/Taro/Demo/2.taro-router-events/</url>
    
    <content type="html"><![CDATA[<p>#安装</p><h2 id="脚手架"><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h2><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">npm install -g <span class="hljs-title">@tarojs</span>/cli<br>或<br>yarn <span class="hljs-keyword">global</span> <span class="hljs-keyword">add</span> <span class="hljs-title">@tarojs</span>/cli<br></code></pre></td></tr></table></figure><h2 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">taro <span class="hljs-keyword">init</span> yourApp<br></code></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm run dev:h5<span class="hljs-regexp">/weapp/</span>alipay<span class="hljs-regexp">/swan/</span>rn<br>或<br>yarn dev:h5/...<br></code></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="h5端修改服务路径"><a href="#h5端修改服务路径" class="headerlink" title="h5端修改服务路径"></a>h5端修改服务路径</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">/config/index<span class="hljs-selector-class">.js</span><br><span class="hljs-selector-tag">h5</span>:&#123;<br>  devServer:&#123;port:<span class="hljs-number">4563</span>,host:<span class="hljs-string">&quot;localhost&quot;</span>&#125;,<br>    ....<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="多端调试"><a href="#多端调试" class="headerlink" title="多端调试"></a>多端调试</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/config/i</span>ndex.js<br>outputRoot: `dist/<span class="hljs-variable">$&#123;process.env.TARO_ENV&#125;</span>`<br><span class="hljs-regexp">//</span>编译生成的文件位于dist下，以各端环境命名h5<span class="hljs-regexp">/weapp/</span>...<br></code></pre></td></tr></table></figure><blockquote><p>对于微信小程序，还需要将project.config.json文件的miniprogramRoot 的路径值改为 dist&#x2F;weapp&#x2F;，这样就可以正常在开发者工具中看到小程序了</p></blockquote><h2 id="alias别名设置"><a href="#alias别名设置" class="headerlink" title="alias别名设置"></a>alias别名设置</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs stylus">config/index<span class="hljs-selector-class">.js</span><br>*如果报错：const path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br>const config = &#123;<br>    ………<br>     alias: &#123;<br>        <span class="hljs-string">&#x27;@/components&#x27;</span>: path<span class="hljs-selector-class">.resolve</span>(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;src/components&#x27;</span>),<br>        <span class="hljs-string">&#x27;@/utils&#x27;</span>: path<span class="hljs-selector-class">.resolve</span>(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;src/utils&#x27;</span>),<br>        <span class="hljs-string">&#x27;@/assets&#x27;</span>: path<span class="hljs-selector-class">.resolve</span>(__dirname, <span class="hljs-string">&#x27;..&#x27;</span>, <span class="hljs-string">&#x27;src/assets&#x27;</span>),<br>      &#125;,<br>    ………<br> &#125;<br>根目录的jsconfig.json/tsconfig.json<span class="hljs-comment">//没有时自行创建</span><br>&#123;<br>  <span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>,<br>    <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;@/components/*&quot;</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;./src/components/*&quot;</span>]</span>,<br>      <span class="hljs-string">&quot;@/utils/*&quot;</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;./src/utils/*&quot;</span>]</span>,<br>      <span class="hljs-string">&quot;@/assets/*&quot;</span>: <span class="hljs-selector-attr">[<span class="hljs-string">&quot;./src/assets/*&quot;</span>]</span>,<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Demo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>3.Taro自由拖拽的滑块</title>
    <link href="/2022/11/01/Taro/Demo/3.Taro%E8%87%AA%E7%94%B1%E6%8B%96%E6%8B%BD%E7%9A%84%E6%BB%91%E5%9D%97/"/>
    <url>/2022/11/01/Taro/Demo/3.Taro%E8%87%AA%E7%94%B1%E6%8B%96%E6%8B%BD%E7%9A%84%E6%BB%91%E5%9D%97/</url>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_42442713/article/details/117713844">1</a></p>]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Demo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Api</title>
    <link href="/2022/11/01/Taro/Api/UWOOZ/1.PC/"/>
    <url>/2022/11/01/Taro/Api/UWOOZ/1.PC/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b9f24191fc4183a7a218e59984c602b578219436f61666fa24299e7893077aa">c8d6a724b68e0a127e5cca7999ad3293af4b0014c1f280adf6379c444af1ea58a7219be5dce41901b6b954776d41f9e8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这里需要密码才能访问。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Taro</category>
      
      <category>Api</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>PHP环境搭建</title>
    <link href="/2021/11/01/PHP/Dev/Php%E7%8E%AF%E5%A2%83/"/>
    <url>/2021/11/01/PHP/Dev/Php%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/fa0ec07010bd">搭建 1</a></p><h1 id="MySQl-服务的启动与停止"><a href="#MySQl-服务的启动与停止" class="headerlink" title="MySQl 服务的启动与停止"></a>MySQl 服务的启动与停止</h1><blockquote><p>终端命令:启动 MySQL 服务</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>support-files/mysql.server start<br></code></pre></td></tr></table></figure><blockquote><p>终端命令:停止 MySQL 服务</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>support-files/mysql.server stop<br></code></pre></td></tr></table></figure><h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><blockquote><p>添加 PHP</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew tap shivammathur/php<br></code></pre></td></tr></table></figure><blockquote><p>选择 PHP 版本——本例使用 7.4</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">&gt;brew install shivammathur<span class="hljs-regexp">/php/</span>php@<span class="hljs-number">7.4</span><br></code></pre></td></tr></table></figure><blockquote><p>链接 PHP 版本</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">brew link <span class="hljs-attr">--overwrite</span> <span class="hljs-attr">--force</span> php<span class="hljs-keyword">@7</span>.4<br></code></pre></td></tr></table></figure><blockquote><p>重启终端</p></blockquote><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">php -v</span><br></code></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p><a href="https://zhuanlan.zhihu.com/p/339259787">https://zhuanlan.zhihu.com/p/339259787</a></p><h1 id="激活码"><a href="#激活码" class="headerlink" title="激活码"></a>激活码</h1><p><a href="https://www.ajihuo.com/pycharm/4197.html">phpstom</a></p><h1 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h1><p><a href="">https://www.jianshu.com/p/5ca9911125cb</a></p><h1 id="80-端口问题"><a href="#80-端口问题" class="headerlink" title="80 端口问题"></a>80 端口问题</h1><p><a href="https://devpress.csdn.net/cloud/6304c207c67703293080dd85.html">80</a></p><h1 id="https-www-codenong-com-cs106072970"><a href="#https-www-codenong-com-cs106072970" class="headerlink" title="https://www.codenong.com/cs106072970/"></a><a href="https://www.codenong.com/cs106072970/">https://www.codenong.com/cs106072970/</a></h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>          <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span>     yxh.com;<br>    <span class="hljs-attribute">root</span>            /Applications/MxSrvs/www/yonghe/devyongxianghui/public/;<br>    <span class="hljs-comment">#access_log     /Applications/MxSrvs/logs/yxh.com.log;</span><br>      <span class="hljs-section">location</span> / &#123;<br>            <span class="hljs-attribute">index</span> index.php index.html <span class="hljs-literal">error</span>/index.html;<br>             <span class="hljs-comment">#autoindex  on;</span><br>            <span class="hljs-attribute">if</span> (!-e <span class="hljs-variable">$request_filename</span>) &#123;<br>                <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^/(.*)$</span> /index.php/<span class="hljs-variable">$1</span>;<br>            &#125;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">400</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">400</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">403</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">403</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">404</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">404</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">500</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">500</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">501</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">501</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">502</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">502</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">503</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">503</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">504</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">504</span>.html;<br>               <span class="hljs-attribute">error_page</span> <span class="hljs-number">505</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">505</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">506</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">506</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">507</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">507</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">509</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">509</span>.html;<br>            <span class="hljs-attribute">error_page</span> <span class="hljs-number">510</span> /<span class="hljs-literal">error</span>/<span class="hljs-number">510</span>.html;<br>            <span class="hljs-attribute">autoindex</span>  <span class="hljs-literal">off</span>;<br>        &#125;<br>        <span class="hljs-section">location</span> <span class="hljs-regexp">~ \.php(.*)$</span> &#123;<br>            <span class="hljs-attribute">fastcgi_pass</span>   <span class="hljs-number">127.0.0.1:10080</span>;<br>            <span class="hljs-attribute">fastcgi_index</span>  index.php;<br>            <span class="hljs-attribute">fastcgi_split_path_info</span> <span class="hljs-regexp"> ^((?U).+\.php)(/?.+)$</span>;<br>            <span class="hljs-attribute">fastcgi_param</span>  SCRIPT_FILENAME  <span class="hljs-variable">$document_root</span><span class="hljs-variable">$fastcgi_script_name</span>;<br>            <span class="hljs-attribute">fastcgi_param</span>  PATH_INFO  <span class="hljs-variable">$fastcgi_path_info</span>;<br>            <span class="hljs-attribute">fastcgi_param</span>  PATH_TRANSLATED  <span class="hljs-variable">$document_root</span><span class="hljs-variable">$fastcgi_path_info</span>;<br>            <span class="hljs-attribute">include</span>        fastcgi_params;<br>        &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue-Error</title>
    <link href="/2021/11/01/Vue/Dev/Vue-Error/"/>
    <url>/2021/11/01/Vue/Dev/Vue-Error/</url>
    
    <content type="html"><![CDATA[<h2 id="Vue-is-not-a-constructor"><a href="#Vue-is-not-a-constructor" class="headerlink" title="Vue is not a constructor"></a>Vue is not a constructor</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Vue3</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>(&#123;<br>            <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;我是xxx&#x27;</span><br>                &#125;<br>            &#125;<br>        &#125;).<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-comment">//Vue2</span><br><span class="hljs-built_in">var</span> app= <span class="hljs-literal">new</span> Vue(&#123;<br>            el:<span class="hljs-string">&#x27;#app&#x27;</span>,<br>            <span class="hljs-built_in">data</span>:&#123;<br>                    message: <span class="hljs-string">&#x27;我是xxx&#x27;</span><br>            &#125;<br>        &#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
      <category>Dev</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
